/**
 * C65
 * Copyright (C) 2019 David Jolly
 *
 * C65 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * C65 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef C65_COMMON_COMMAND_H_
#define C65_COMMON_COMMAND_H_

enum {
	COMMAND_ADC = 0,
	COMMAND_AND,
	COMMAND_ASL,
	COMMAND_BBR0,
	COMMAND_BBR1,
	COMMAND_BBR2,
	COMMAND_BBR3,
	COMMAND_BBR4,
	COMMAND_BBR5,
	COMMAND_BBR6,
	COMMAND_BBR7,
	COMMAND_BBS0,
	COMMAND_BBS1,
	COMMAND_BBS2,
	COMMAND_BBS3,
	COMMAND_BBS4,
	COMMAND_BBS5,
	COMMAND_BBS6,
	COMMAND_BBS7,
	COMMAND_BCC,
	COMMAND_BCS,
	COMMAND_BEQ,
	COMMAND_BIT,
	COMMAND_BMI,
	COMMAND_BNE,
	COMMAND_BPL,
	COMMAND_BRA,
	COMMAND_BRK,
	COMMAND_BVC,
	COMMAND_BVS,
	COMMAND_CLC,
	COMMAND_CLD,
	COMMAND_CLI,
	COMMAND_CLV,
	COMMAND_CMP,
	COMMAND_CPX,
	COMMAND_CPY,
	COMMAND_DEC,
	COMMAND_DEX,
	COMMAND_DEY,
	COMMAND_EOR,
	COMMAND_INC,
	COMMAND_INX,
	COMMAND_INY,
	COMMAND_JMP,
	COMMAND_JSR,
	COMMAND_LDA,
	COMMAND_LDX,
	COMMAND_LDY,
	COMMAND_LSR,
	COMMAND_NOP,
	COMMAND_ORA,
	COMMAND_PHA,
	COMMAND_PHP,
	COMMAND_PHX,
	COMMAND_PHY,
	COMMAND_PLA,
	COMMAND_PLP,
	COMMAND_PLX,
	COMMAND_PLY,
	COMMAND_RMB0,
	COMMAND_RMB1,
	COMMAND_RMB2,
	COMMAND_RMB3,
	COMMAND_RMB4,
	COMMAND_RMB5,
	COMMAND_RMB6,
	COMMAND_RMB7,
	COMMAND_ROL,
	COMMAND_ROR,
	COMMAND_RTI,
	COMMAND_RTS,
	COMMAND_SBC,
	COMMAND_SEC,
	COMMAND_SED,
	COMMAND_SEI,
	COMMAND_SMB0,
	COMMAND_SMB1,
	COMMAND_SMB2,
	COMMAND_SMB3,
	COMMAND_SMB4,
	COMMAND_SMB5,
	COMMAND_SMB6,
	COMMAND_SMB7,
	COMMAND_STA,
	COMMAND_STP,
	COMMAND_STX,
	COMMAND_STY,
	COMMAND_STZ,
	COMMAND_TAX,
	COMMAND_TAY,
	COMMAND_TRB,
	COMMAND_TSB,
	COMMAND_TSX,
	COMMAND_TXA,
	COMMAND_TXS,
	COMMAND_TYA,
	COMMAND_WAI,
};

#define COMMAND_MAX COMMAND_WAI

static const std::string COMMAND_STR[] = {
	"adc", // COMMAND_ADC
	"and", // COMMAND_AND
	"asl", // COMMAND_ASL
	"bbr0", // COMMAND_BBR0
	"bbr1", // COMMAND_BBR1
	"bbr2", // COMMAND_BBR2
	"bbr3", // COMMAND_BBR3
	"bbr4", // COMMAND_BBR4
	"bbr5", // COMMAND_BBR5
	"bbr6", // COMMAND_BBR6
	"bbr7", // COMMAND_BBR7
	"bbs0", // COMMAND_BBS0
	"bbs1", // COMMAND_BBS1
	"bbs2", // COMMAND_BBS2
	"bbs3", // COMMAND_BBS3
	"bbs4", // COMMAND_BBS4
	"bbs5", // COMMAND_BBS5
	"bbs6", // COMMAND_BBS6
	"bbs7", // COMMAND_BBS7
	"bcc", // COMMAND_BCC
	"bcs", // COMMAND_BCS
	"beq", // COMMAND_BEQ
	"bit", // COMMAND_BIT
	"bmi", // COMMAND_BMI
	"bne", // COMMAND_BNE
	"bpl", // COMMAND_BPL
	"bra", // COMMAND_BRA
	"brk", // COMMAND_BRK
	"bvc", // COMMAND_BVC
	"bvs", // COMMAND_BVS
	"clc", // COMMAND_CLC
	"cld", // COMMAND_CLD
	"cli", // COMMAND_CLI
	"clv", // COMMAND_CLV
	"cmp", // COMMAND_CMP
	"cpx", // COMMAND_CPX
	"cpy", // COMMAND_CPY
	"dec", // COMMAND_DEC
	"dex", // COMMAND_DEX
	"dey", // COMMAND_DEY
	"eor", // COMMAND_EOR
	"inc", // COMMAND_INC
	"inx", // COMMAND_INX
	"iny", // COMMAND_INY
	"jmp", // COMMAND_JMP
	"jsr", // COMMAND_JSR
	"lda", // COMMAND_LDA
	"ldx", // COMMAND_LDX
	"ldy", // COMMAND_LDY
	"lsr", // COMMAND_LSR
	"nop", // COMMAND_NOP
	"ora", // COMMAND_ORA
	"pha", // COMMAND_PHA
	"php", // COMMAND_PHP
	"phx", // COMMAND_PHX
	"phy", // COMMAND_PHY
	"pla", // COMMAND_PLA
	"plp", // COMMAND_PLP
	"plx", // COMMAND_PLX
	"ply", // COMMAND_PLY
	"rmb0", // COMMAND_RMB0
	"rmb1", // COMMAND_RMB1
	"rmb2", // COMMAND_RMB2
	"rmb3", // COMMAND_RMB3
	"rmb4", // COMMAND_RMB4
	"rmb5", // COMMAND_RMB5
	"rmb6", // COMMAND_RMB6
	"rmb7", // COMMAND_RMB7
	"rol", // COMMAND_ROL
	"ror", // COMMAND_ROR
	"rti", // COMMAND_RTI
	"rts", // COMMAND_RTS
	"sbc", // COMMAND_SBC
	"sec", // COMMAND_SEC
	"sed", // COMMAND_SED
	"sei", // COMMAND_SEI
	"smb0", // COMMAND_SMB0
	"smb1", // COMMAND_SMB1
	"smb2", // COMMAND_SMB2
	"smb3", // COMMAND_SMB3
	"smb4", // COMMAND_SMB4
	"smb5", // COMMAND_SMB5
	"smb6", // COMMAND_SMB6
	"smb7", // COMMAND_SMB7
	"sta", // COMMAND_STA
	"stp", // COMMAND_STP
	"stx", // COMMAND_STX
	"sty", // COMMAND_STY
	"stz", // COMMAND_STZ
	"tax", // COMMAND_TAX
	"tay", // COMMAND_TAY
	"trb", // COMMAND_TRB
	"tsb", // COMMAND_TSB
	"tsx", // COMMAND_TSX
	"txa", // COMMAND_TXA
	"txs", // COMMAND_TXS
	"tya", // COMMAND_TYA
	"wai", // COMMAND_WAI
	};

#define COMMAND_STRING(_TYPE_) \
	(((_TYPE_) > COMMAND_MAX) ? STRING_UNKNOWN : \
		STRING(COMMAND_STR[_TYPE_]))

enum {
	COMMAND_MODE_ABSOLUTE = 0,
	COMMAND_MODE_ABSOLUTE_INDEX_INDIRECT,
	COMMAND_MODE_ABSOLUTE_INDEX_X,
	COMMAND_MODE_ABSOLUTE_INDEX_Y,
	COMMAND_MODE_ABSOLUTE_INDIRECT,
	COMMAND_MODE_ACCUMULATOR,
	COMMAND_MODE_IMMEDIATE,
	COMMAND_MODE_IMPLIED,
	COMMAND_MODE_RELATIVE,
	COMMAND_MODE_STACK,
	COMMAND_MODE_ZERO_PAGE,
	COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT,
	COMMAND_MODE_ZERO_PAGE_INDEX_X,
	COMMAND_MODE_ZERO_PAGE_INDEX_Y,
	COMMAND_MODE_ZERO_PAGE_INDIRECT,
	COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX,
};

#define COMMAND_MODE_MAX COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX

static const std::string COMMAND_MODE_STR[] = {
	"a", // COMMAND_MODE_ABSOLUTE
	"(a, x)", // COMMAND_MODE_ABSOLUTE_INDEX_INDIRECT
	"a, x", // COMMAND_MODE_ABSOLUTE_INDEX_X
	"a, y", // COMMAND_MODE_ABSOLUTE_INDEX_Y
	"(a)", // COMMAND_MODE_ABSOLUTE_INDIRECT
	"A", // COMMAND_MODE_ACCUMULATOR
	"#", // COMMAND_MODE_IMMEDIATE
	"i", // COMMAND_MODE_IMPLIED
	"r", // COMMAND_MODE_RELATIVE
	"s", // COMMAND_MODE_STACK
	"zp", // COMMAND_MODE_ZERO_PAGE
	"(zp, x)", // COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT
	"zp, x", // COMMAND_MODE_ZERO_PAGE_INDEX_X
	"zp, y", // COMMAND_MODE_ZERO_PAGE_INDEX_Y
	"(zp)", // COMMAND_MODE_ZERO_PAGE_INDIRECT
	"(zp), y", // COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX
	};

#define COMMAND_MODE_STRING(_TYPE_) \
	(((_TYPE_) > COMMAND_MODE_MAX) ? STRING_UNKNOWN : \
		STRING(COMMAND_MODE_STR[_TYPE_]))

typedef struct {
	int type;
	int mode;
	uint8_t length;
	uint8_t cycle;
} command_t;

static const command_t CMD[] = {

	// 0x00
	{ COMMAND_BRK, COMMAND_MODE_STACK, 1, 7 }, // brk s
	{ COMMAND_ORA, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // ora (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_TSB, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // tsb zp
	{ COMMAND_ORA, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // ora zp
	{ COMMAND_ASL, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // asl zp
	{ COMMAND_RMB0, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb0 zp
	{ COMMAND_PHP, COMMAND_MODE_STACK, 1, 3 }, // php s
	{ COMMAND_ORA, COMMAND_MODE_IMMEDIATE, 1, 2 }, // ora #
	{ COMMAND_ASL, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // asl A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_TSB, COMMAND_MODE_ABSOLUTE, 2, 4 }, // tsb a
	{ COMMAND_ORA, COMMAND_MODE_ABSOLUTE, 2, 4 }, // ora a
	{ COMMAND_ASL, COMMAND_MODE_ABSOLUTE, 2, 4 }, // asl a
	{ COMMAND_BBR0, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr0 r

	// 0x10
	{ COMMAND_BPL, COMMAND_MODE_RELATIVE, 0, 2 }, // bpl r
	{ COMMAND_ORA, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // ora (zp), y
	{ COMMAND_ORA, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // ora (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_TRB, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // trb zp
	{ COMMAND_ORA, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // ora zp, x
	{ COMMAND_ASL, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // asl zp, x
	{ COMMAND_RMB1, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb1 zp
	{ COMMAND_CLC, COMMAND_MODE_IMPLIED, 0, 2 }, // clc i
	{ COMMAND_ORA, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // ora a, y
	{ COMMAND_INC, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // inc A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_TRB, COMMAND_MODE_ABSOLUTE, 2, 4 }, // trb a
	{ COMMAND_ORA, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // ora a, x
	{ COMMAND_ASL, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // asl a, x
	{ COMMAND_BBR1, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr1 r

	// 0x20
	{ COMMAND_JSR, COMMAND_MODE_ABSOLUTE, 2, 4 }, // jsr a
	{ COMMAND_AND, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // and (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_BIT, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // bit zp
	{ COMMAND_AND, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // and zp
	{ COMMAND_ROL, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rol zp
	{ COMMAND_RMB2, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb2 zp
	{ COMMAND_PLP, COMMAND_MODE_STACK, 1, 3 }, // plp s
	{ COMMAND_AND, COMMAND_MODE_IMMEDIATE, 1, 2 }, // and #
	{ COMMAND_ROL, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // rol A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_BIT, COMMAND_MODE_ABSOLUTE, 2, 4 }, // bit a
	{ COMMAND_AND, COMMAND_MODE_ABSOLUTE, 2, 4 }, // and a
	{ COMMAND_ROL, COMMAND_MODE_ABSOLUTE, 2, 4 }, // rol a
	{ COMMAND_BBR2, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr2 r

	// 0x30
	{ COMMAND_BMI, COMMAND_MODE_RELATIVE, 0, 2 }, // bmi r
	{ COMMAND_AND, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // and (zp), y
	{ COMMAND_AND, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // and (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_BIT, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // bit zp, x
	{ COMMAND_AND, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // and zp, x
	{ COMMAND_ROL, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // rol zp, x
	{ COMMAND_RMB3, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb3 zp
	{ COMMAND_SEC, COMMAND_MODE_IMPLIED, 0, 2 }, // sec i
	{ COMMAND_AND, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // and a, y
	{ COMMAND_DEC, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // dec A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_BIT, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // bit a, x
	{ COMMAND_AND, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // and a, x
	{ COMMAND_ROL, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // rol a, x
	{ COMMAND_BBR3, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr3 r

	// 0x40
	{ COMMAND_RTI, COMMAND_MODE_STACK, 1, 3 }, // rti s
	{ COMMAND_EOR, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // eor (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_EOR, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // eor zp
	{ COMMAND_LSR, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // lsr zp
	{ COMMAND_RMB4, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb4 zp
	{ COMMAND_PHA, COMMAND_MODE_STACK, 1, 3 }, // pha s
	{ COMMAND_EOR, COMMAND_MODE_IMMEDIATE, 1, 2 }, // eor #
	{ COMMAND_LSR, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // lsr A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_JMP, COMMAND_MODE_ABSOLUTE, 2, 4 }, // jmp a
	{ COMMAND_EOR, COMMAND_MODE_ABSOLUTE, 2, 4 }, // eor a
	{ COMMAND_LSR, COMMAND_MODE_ABSOLUTE, 2, 4 }, // lsr a
	{ COMMAND_BBR4, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr4 r

	// 0x50
	{ COMMAND_BVC, COMMAND_MODE_RELATIVE, 0, 2 }, // bvc r
	{ COMMAND_EOR, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // eor (zp), y
	{ COMMAND_EOR, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // eor (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_EOR, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // eor zp, x
	{ COMMAND_LSR, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // lsr zp, x
	{ COMMAND_RMB5, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb5 zp
	{ COMMAND_CLI, COMMAND_MODE_IMPLIED, 0, 2 }, // cli i
	{ COMMAND_EOR, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // eor a, y
	{ COMMAND_PHY, COMMAND_MODE_STACK, 1, 3 }, // phy s
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_EOR, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // eor a, x
	{ COMMAND_LSR, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // lsr a, x
	{ COMMAND_BBR5, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr5 r

	// 0x60
	{ COMMAND_RTS, COMMAND_MODE_STACK, 1, 3 }, // rts s
	{ COMMAND_ADC, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // adc (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STZ, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // stz zp
	{ COMMAND_ADC, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // adc zp
	{ COMMAND_ROR, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // ror zp
	{ COMMAND_RMB6, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb6 zp
	{ COMMAND_PLA, COMMAND_MODE_STACK, 1, 3 }, // pla s
	{ COMMAND_ADC, COMMAND_MODE_IMMEDIATE, 1, 2 }, // adc #
	{ COMMAND_ROR, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // ror A
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_JMP, COMMAND_MODE_ABSOLUTE_INDIRECT, 2, 6 }, // jmp (a)
	{ COMMAND_ADC, COMMAND_MODE_ABSOLUTE, 2, 4 }, // adc a
	{ COMMAND_ROR, COMMAND_MODE_ABSOLUTE, 2, 4 }, // ror a
	{ COMMAND_BBR6, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr6 r

	// 0x70
	{ COMMAND_BVS, COMMAND_MODE_RELATIVE, 0, 2 }, // bvs r
	{ COMMAND_ADC, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // adc (zp), y
	{ COMMAND_ADC, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // adc (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STZ, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // stz zp, x
	{ COMMAND_ADC, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // adc zp, x
	{ COMMAND_ROR, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // ror zp, x
	{ COMMAND_RMB7, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // rmb7 zp
	{ COMMAND_SEI, COMMAND_MODE_IMPLIED, 0, 2 }, // sei i
	{ COMMAND_ADC, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // adc a, y
	{ COMMAND_PLY, COMMAND_MODE_STACK, 1, 3 }, // ply s
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_JMP, COMMAND_MODE_ABSOLUTE_INDEX_INDIRECT, 2, 6 }, // jmp (a, x)
	{ COMMAND_ADC, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // adc a, x
	{ COMMAND_ROR, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // ror a, x
	{ COMMAND_BBR7, COMMAND_MODE_RELATIVE, 0, 2 }, // bbr7 r

	// 0x80
	{ COMMAND_BRA, COMMAND_MODE_RELATIVE, 0, 2 }, // bra r
	{ COMMAND_STA, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // sta (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STY, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // sty zp
	{ COMMAND_STA, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // sta zp
	{ COMMAND_STX, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // stx zp
	{ COMMAND_SMB0, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb0 zp
	{ COMMAND_DEY, COMMAND_MODE_IMPLIED, 0, 2 }, // dey i
	{ COMMAND_BIT, COMMAND_MODE_IMMEDIATE, 1, 2 }, // bit #
	{ COMMAND_TXA, COMMAND_MODE_IMPLIED, 0, 2 }, // txa i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STY, COMMAND_MODE_ABSOLUTE, 2, 4 }, // sty a
	{ COMMAND_STA, COMMAND_MODE_ABSOLUTE, 2, 4 }, // sta a
	{ COMMAND_STX, COMMAND_MODE_ABSOLUTE, 2, 4 }, // stx a
	{ COMMAND_BBS0, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs0 r

	// 0x90
	{ COMMAND_BCC, COMMAND_MODE_RELATIVE, 0, 2 }, // bcc r
	{ COMMAND_STA, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // sta (zp), y
	{ COMMAND_STA, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // sta (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STY, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // sty zp, x
	{ COMMAND_STA, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // sta zp, x
	{ COMMAND_STX, COMMAND_MODE_ZERO_PAGE_INDEX_Y, 1, 4 }, // stx zp, y
	{ COMMAND_SMB1, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb1 zp
	{ COMMAND_TYA, COMMAND_MODE_IMPLIED, 0, 2 }, // tya i
	{ COMMAND_STA, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // sta a, y
	{ COMMAND_TXS, COMMAND_MODE_IMPLIED, 0, 2 }, // txs i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_STZ, COMMAND_MODE_ABSOLUTE, 2, 4 }, // stz a
	{ COMMAND_STA, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // sta a, x
	{ COMMAND_STZ, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // stz a, x
	{ COMMAND_BBS1, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs1 r

	// 0xa0
	{ COMMAND_LDY, COMMAND_MODE_IMMEDIATE, 1, 2 }, // ldy #
	{ COMMAND_LDA, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // lda (zp, x)
	{ COMMAND_LDX, COMMAND_MODE_IMMEDIATE, 1, 2 }, // ldx #
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_LDY, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // ldy zp
	{ COMMAND_LDA, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // lda zp
	{ COMMAND_LDX, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // ldx zp
	{ COMMAND_SMB2, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb2 zp
	{ COMMAND_TAY, COMMAND_MODE_IMPLIED, 0, 2 }, // tay i
	{ COMMAND_LDA, COMMAND_MODE_IMMEDIATE, 1, 2 }, // lda #
	{ COMMAND_TAX, COMMAND_MODE_IMPLIED, 0, 2 }, // tax i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_LDY, COMMAND_MODE_ACCUMULATOR, 0, 2 }, // ldy A
	{ COMMAND_LDA, COMMAND_MODE_ABSOLUTE, 2, 4 }, // lda a
	{ COMMAND_LDX, COMMAND_MODE_ABSOLUTE, 2, 4 }, // ldx a
	{ COMMAND_BBS2, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs2 r

	// 0xb0
	{ COMMAND_BCS, COMMAND_MODE_RELATIVE, 0, 2 }, // bcs r
	{ COMMAND_LDA, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // lda (zp), y
	{ COMMAND_LDA, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // lda (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_LDY, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // ldy zp, x
	{ COMMAND_LDA, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // lda zp, x
	{ COMMAND_LDX, COMMAND_MODE_ZERO_PAGE_INDEX_Y, 1, 4 }, // ldx zp, y
	{ COMMAND_SMB3, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb3 zp
	{ COMMAND_CLV, COMMAND_MODE_IMPLIED, 0, 2 }, // clv i
	{ COMMAND_LDA, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // lda a, y
	{ COMMAND_TSX, COMMAND_MODE_IMPLIED, 0, 2 }, // tsx i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_LDY, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // ldy a, x
	{ COMMAND_LDA, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // lda a, x
	{ COMMAND_LDX, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // ldx a, y
	{ COMMAND_BBS3, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs3 r

	// 0xc0
	{ COMMAND_CPY, COMMAND_MODE_IMMEDIATE, 1, 2 }, // cpy #
	{ COMMAND_CMP, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // cmp (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_CPY, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // cpy zp
	{ COMMAND_CMP, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // cmp zp
	{ COMMAND_DEC, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // dec zp
	{ COMMAND_SMB4, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb4 zp
	{ COMMAND_INY, COMMAND_MODE_IMPLIED, 0, 2 }, // iny i
	{ COMMAND_CMP, COMMAND_MODE_IMMEDIATE, 1, 2 }, // cmp #
	{ COMMAND_DEX, COMMAND_MODE_IMPLIED, 0, 2 }, // dex i
	{ COMMAND_WAI, COMMAND_MODE_IMPLIED, 0, 2 }, // wai i
	{ COMMAND_CPY, COMMAND_MODE_ABSOLUTE, 2, 4 }, // cpy a
	{ COMMAND_CMP, COMMAND_MODE_ABSOLUTE, 2, 4 }, // cmp a
	{ COMMAND_DEC, COMMAND_MODE_ABSOLUTE, 2, 4 }, // dec a
	{ COMMAND_BBS4, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs4 r

	// 0xd0
	{ COMMAND_BNE, COMMAND_MODE_RELATIVE, 0, 2 }, // bne r
	{ COMMAND_CMP, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // cmp (zp), y
	{ COMMAND_CMP, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // cmp (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_CMP, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // cmp zp, x
	{ COMMAND_DEC, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // dec zp, x
	{ COMMAND_SMB5, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb5 zp
	{ COMMAND_CLD, COMMAND_MODE_IMPLIED, 0, 2 }, // cld i
	{ COMMAND_CMP, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // cmp a, y
	{ COMMAND_PHX, COMMAND_MODE_STACK, 1, 3 }, // phx s
	{ COMMAND_STP, COMMAND_MODE_IMPLIED, 0, 2 }, // stp i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_CMP, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // cmp a, x
	{ COMMAND_DEC, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // dec a, x
	{ COMMAND_BBS5, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs5 r

	// 0xe0
	{ COMMAND_CPX, COMMAND_MODE_IMMEDIATE, 1, 2 }, // cpx #
	{ COMMAND_SBC, COMMAND_MODE_ZERO_PAGE_INDEX_INDIRECT, 1, 6 }, // sbc (zp, x)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_CPX, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // cpx zp
	{ COMMAND_SBC, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // sbc zp
	{ COMMAND_INC, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // inc zp
	{ COMMAND_SMB6, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb6 zp
	{ COMMAND_INX, COMMAND_MODE_IMPLIED, 0, 2 }, // inx i
	{ COMMAND_SBC, COMMAND_MODE_IMMEDIATE, 1, 2 }, // sbc #
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_CPX, COMMAND_MODE_ABSOLUTE, 2, 4 }, // cpx a
	{ COMMAND_SBC, COMMAND_MODE_ABSOLUTE, 2, 4 }, // sbc a
	{ COMMAND_INC, COMMAND_MODE_ABSOLUTE, 2, 4 }, // inc a
	{ COMMAND_BBS6, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs6 r

	// 0xf0
	{ COMMAND_BEQ, COMMAND_MODE_RELATIVE, 0, 2 }, // beq r
	{ COMMAND_SBC, COMMAND_MODE_ZERO_PAGE_INDIRECT_INDEX, 1, 5 }, // sbc (zp), y
	{ COMMAND_SBC, COMMAND_MODE_ZERO_PAGE_INDIRECT, 1, 5 }, // sbc (zp)
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_SBC, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // sbc zp, x
	{ COMMAND_INC, COMMAND_MODE_ZERO_PAGE_INDEX_X, 1, 4 }, // inc zp, x
	{ COMMAND_SMB7, COMMAND_MODE_ZERO_PAGE, 1, 3 }, // smb7 zp
	{ COMMAND_SED, COMMAND_MODE_IMPLIED, 0, 2 }, // sed i
	{ COMMAND_SBC, COMMAND_MODE_ABSOLUTE_INDEX_Y, 2, 4 }, // sbc a, y
	{ COMMAND_PLX, COMMAND_MODE_STACK, 1, 3 }, // plx s
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_NOP, COMMAND_MODE_IMPLIED, 0, 2 }, // nop i
	{ COMMAND_SBC, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // sbc a, x
	{ COMMAND_INC, COMMAND_MODE_ABSOLUTE_INDEX_X, 2, 4 }, // inc a, x
	{ COMMAND_BBS7, COMMAND_MODE_RELATIVE, 0, 2 }, // bbs7 r
	};

#define COMMAND(_TYPE_) \
	(((_TYPE_) > COMMAND_MAX) ? CMD[0xea] : \
		CMD[_TYPE_])

#endif // C65_COMMON_COMMAND_H_
